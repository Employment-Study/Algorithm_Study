package step01;
/*
	 당신은 폰켓몬을 잡기 위한 오랜 여행 끝에, 홍 박사님의 연구실에 도착했습니다.
	 홍 박사님은 당신에게 자신의 연구실에 있는 총 N 마리의 폰켓몬 중에서 N/2마리를 가져가도 좋다고 했습니다.
	홍 박사님 연구실의 폰켓몬은 종류에 따라 번호를 붙여 구분합니다. 따라서 같은 종류의 폰켓몬은 같은 번호를 가지고 있습니다. 
	예를 들어 연구실에 총 4마리의 폰켓몬이 있고, 각 폰켓몬의 종류 번호가 [3번, 1번, 2번, 3번]이라면 
	이는 3번 폰켓몬 두 마리, 1번 폰켓몬 한 마리, 2번 폰켓몬 한 마리가 있음을 나타냅니다. 
	이때, 4마리의 폰켓몬 중 2마리를 고르는 방법은 다음과 같이 6가지가 있습니다.

			첫 번째(3번), 두 번째(1번) 폰켓몬을 선택
			첫 번째(3번), 세 번째(2번) 폰켓몬을 선택
			첫 번째(3번), 네 번째(3번) 폰켓몬을 선택
			두 번째(1번), 세 번째(2번) 폰켓몬을 선택
			두 번째(1번), 네 번째(3번) 폰켓몬을 선택
			세 번째(2번), 네 번째(3번) 폰켓몬을 선택
	이때, 첫 번째(3번) 폰켓몬과 네 번째(3번) 폰켓몬을 선택하는 방법은 한 종류(3번 폰켓몬 두 마리)의 폰켓몬만 가질 수 있지만, 
	다른 방법들은 모두 두 종류의 폰켓몬을 가질 수 있습니다. 따라서 위 예시에서 가질 수 있는 폰켓몬 종류 수의 최댓값은 2가 됩니다.
	당신은 최대한 다양한 종류의 폰켓몬을 가지길 원하기 때문에, 최대한 많은 종류의 폰켓몬을 포함해서 N/2마리를 선택하려 합니다. 
	N마리 폰켓몬의 종류 번호가 담긴 배열 nums가 매개변수로 주어질 때, N/2마리의 폰켓몬을 선택하는 방법 중, 가장 많은 종류의 폰켓몬을 선택하는 방법을 찾아, 
	그때의 폰켓몬 종류 번호의 개수를 return 하도록 solution 함수를 완성해주세요.
 */

import java.util.Arrays;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class phoncketmon {
public static void main(String[] args) {
//조건
//	1.  nums의 길이는 1이상 10000이하 짝수
//	2.  종류 번호는 1이상 200,000이하

	//풀이 
	//1. 가져갈 수 있는 총 마리수는 N/2마리 ( 배열의 길이는 1~ 5000)
	//2. N/2의 배열을 만들어 안에 겹치지 않게 인덱스별 값을 넣는다.
	
	
	int[] nums = {3,1,2,3,8,7,3,5,6,4};
	int result = nums.length/2;			//5
	
	//result만큼 종이 다양하면 5를 출력
	IntStream stream = Arrays.stream(nums);
	nums = stream.sorted().toArray();
	System.out.println(Arrays.toString(nums));
	
	//5보다 낮으면 경우의 수를 확인한다.
	//해쉬맵을 통해 각 인덱스별 숫자 매김
	//1종(2) 나머지 3종 ==4
	//1종(3) 나머지 2종 == 3
	//1종(4) 나머지 1종 == 2
	//1종 (5) ==1
	
	
	
}
}
