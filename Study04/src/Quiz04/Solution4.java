package Quiz04;

// Study
// 77484
// 로또의 최고 순위와 최저 순위
public class Solution4 {
	public int[] solution(int[] lottos, int[] win_nums) {
        int[] answer = new int[2];
        int z = 0, w = 0;
        
        for(int i : lottos) {
        	if(i == 0) {
        		// 모르는 번호가 0일경우에는 당첨될 확률이 있기 때문에
        		// z를 증가시켜 확율을 높인다
        		z++;
        	}
        	else { // 0이 아닌 로또번호와 동일한 번호는 w를 증가시켜
        		// 최저확율을 담는다
        		for(int j : win_nums) {
        			if( i == j) {
        				// 다 맞췄을 때애는 w가 6인 것이다
        				w++; // 로또 번호와 내 번호가 동일하면 담긴다
        				// 그만큼 0이 아닌 불확실한 경우가 아니기 때문에 최저확률이 된다
        				break;
        			}
        		}
        		
        	}
        }
       // 만약에 w인 맞힌 숫자와 z인 불확실한 숫자의 증가 값이 총 1보다 크다는 경우를 담고 있는데
       // 1보다 작으면 6등이고, 크면 점점 순위가 올라간다
       // 여기서 7을 한 이유는 6개를 모두 맞췄을 최고점수라면 1등을 출력해야 하기 때문에
       // 맞춘 개수 - 7을 하여 결과를 등수로 출력한다
       // 따라서 맞춘개수가 6이라면 7 - 6을 했을때 1이고 그럼 1등이 된다
        // 예 ) 배열은 6개 짜리이고 w에서 + 된 경우가 4라면 z에서 + 되는 경우는 2인 것이다
        // 그러므로 6이 1보다 크기 때문에 첫번째는 무조건 1등이 나오게 만든 answer[0]것이다
       answer[0] = (w+z) > 1 ? 7 - (w+z) : 6;
       // 만약 w인 내 점수가 로또 번호와 1개도 맞지 않다면 6으로 반환되어 6등이 된다
       answer[1] = w > 1 ? 7 - w : 6; 
        return answer;
    }
}
